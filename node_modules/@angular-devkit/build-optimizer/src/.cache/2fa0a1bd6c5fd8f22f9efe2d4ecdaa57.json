{"remainingRequest":"C:\\Users\\VerBack-TobTab\\Documents\\paiboon-dev\\Paiboon-dev\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\VerBack-TobTab\\Documents\\paiboon-dev\\Paiboon-dev\\node_modules\\ngx-bootstrap\\datepicker\\utils\\bs-calendar-utils.js","dependencies":[{"path":"C:\\Users\\VerBack-TobTab\\Documents\\paiboon-dev\\Paiboon-dev\\node_modules\\ngx-bootstrap\\datepicker\\utils\\bs-calendar-utils.js","mtime":1520876971000},{"path":"C:\\Users\\VerBack-TobTab\\Documents\\paiboon-dev\\Paiboon-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537173117709},{"path":"C:\\Users\\VerBack-TobTab\\Documents\\paiboon-dev\\Paiboon-dev\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { getDay, isFirstDayOfWeek } from '../../chronos/utils/date-getters';\nimport { shiftDate } from '../../chronos/utils/date-setters';\nimport { isAfter, isBefore } from '../../chronos/utils/date-compare';\nimport { endOf, startOf } from '../../chronos/utils/start-end-of';\nexport function getStartingDayOfCalendar(date, options) {\n    if (isFirstDayOfWeek(date, options.firstDayOfWeek)) {\n        return date;\n    }\n    var weekDay = getDay(date);\n    var offset = calculateDateOffset(weekDay, options.firstDayOfWeek);\n    return shiftDate(date, { day: -offset });\n}\nexport function calculateDateOffset(weekday, startingDayOffset) {\n    if (startingDayOffset === 0) {\n        return weekday;\n    }\n    var offset = weekday - startingDayOffset % 7;\n    return offset < 0 ? offset + 7 : offset;\n}\nexport function isMonthDisabled(date, min, max) {\n    var minBound = min && isBefore(endOf(date, 'month'), min, 'day');\n    var maxBound = max && isAfter(startOf(date, 'month'), max, 'day');\n    return minBound || maxBound;\n}\nexport function isYearDisabled(date, min, max) {\n    var minBound = min && isBefore(endOf(date, 'year'), min, 'day');\n    var maxBound = max && isAfter(startOf(date, 'year'), max, 'day');\n    return minBound || maxBound;\n}\n//# sourceMappingURL=bs-calendar-utils.js.map",null]}